{"version":3,"sources":["book.svg","icons sync //.svg$","icons/alien.svg","icons/bow-and-arrow.svg","icons/butterfly.svg","icons/castle.svg","icons/dragon.svg","icons/girl.svg","icons/mountain.svg","icons/ship.svg","icons/snake.svg","icons/spaceship.svg","icons/storm.svg","icons/sword.svg","icons/turtle.svg","icons/unicorn.svg","icons/wand.svg","icons/witch.svg","icons/wizard.svg","icons/wolf.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./alien.svg","./bow-and-arrow.svg","./butterfly.svg","./castle.svg","./dragon.svg","./girl.svg","./mountain.svg","./ship.svg","./snake.svg","./spaceship.svg","./storm.svg","./sword.svg","./turtle.svg","./unicorn.svg","./wand.svg","./witch.svg","./wizard.svg","./wolf.svg","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","reqSvgs","require","svgs","path","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","populateIndexes","iconIndexesToDisplay","i","length","push","setState","getIcon","state","currentIcon","message","positionOfNextIconIndex","Math","floor","random","nextIconIndex","copyOfIconIndexes","splice","_this$state","react_default","a","createElement","className","onClick","src","book","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af0e1d12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book.e70a547c.svg\";","var map = {\n\t\"./alien.svg\": 19,\n\t\"./bow-and-arrow.svg\": 20,\n\t\"./butterfly.svg\": 21,\n\t\"./castle.svg\": 22,\n\t\"./dragon.svg\": 23,\n\t\"./girl.svg\": 24,\n\t\"./mountain.svg\": 25,\n\t\"./ship.svg\": 26,\n\t\"./snake.svg\": 27,\n\t\"./spaceship.svg\": 28,\n\t\"./storm.svg\": 29,\n\t\"./sword.svg\": 30,\n\t\"./turtle.svg\": 31,\n\t\"./unicorn.svg\": 32,\n\t\"./wand.svg\": 33,\n\t\"./witch.svg\": 34,\n\t\"./wizard.svg\": 35,\n\t\"./wolf.svg\": 36\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18;","module.exports = __webpack_public_path__ + \"static/media/alien.3a7088ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/bow-and-arrow.88e9e3c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/butterfly.f8d417fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/castle.31452360.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragon.4b25d959.svg\";","module.exports = __webpack_public_path__ + \"static/media/girl.b80a7f7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/mountain.d9d670e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/ship.a99523bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/snake.4d833fe2.svg\";","module.exports = __webpack_public_path__ + \"static/media/spaceship.85d137cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/storm.355ea86f.svg\";","module.exports = __webpack_public_path__ + \"static/media/sword.a5945f16.svg\";","module.exports = __webpack_public_path__ + \"static/media/turtle.a6bfda0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/unicorn.f689a6a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/wand.1cdcad6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/witch.a7b28cd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard.825fff07.svg\";","module.exports = __webpack_public_path__ + \"static/media/wolf.27d9103d.svg\";","import React, { Component } from 'react';\nimport book from './book.svg';\nimport './App.css';\n\n// TODOs: \n// 1. optimize svgs, perhaps into one large sprite\n// 2. deployment webpack stuff\n// 3. better ui for for beginning, ending of app\n\n// set up icons from dir\nconst reqSvgs = require.context ( './icons', true, /\\.svg$/ )\nconst paths = reqSvgs.keys ()\nconst svgs = paths.map( path => reqSvgs ( path ) )\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentIcon : '',\n      message: \"Click the book to begin your story\",\n    }\n  }\n\n  componentDidMount = () => {\n    this.populateIndexes();\n   }\n\n  // create full array of iconIndexesToDisplay, to be shown in random order\n  populateIndexes = () => {\n    const iconIndexesToDisplay = [];\n    for (let i = 0; i < svgs.length; i++) {\n      iconIndexesToDisplay.push(i); \n    }\n    this.setState({ iconIndexesToDisplay: iconIndexesToDisplay });\n  }\n\n  // sets state to new icon, removes index from iconIndexesToDisplay\n  getIcon = () => {\n    const {\n      iconIndexesToDisplay,\n    } = this.state;\n\n    // return to beginning if it's over...\n    if (iconIndexesToDisplay.length === 0) {\n      this.populateIndexes();\n      this.setState({\n        currentIcon : '',\n        message: \"Click the book to begin your story\",\n      });\n      return;\n    }\n\n    const positionOfNextIconIndex = Math.floor(Math.random()*iconIndexesToDisplay.length);\n    const nextIconIndex = iconIndexesToDisplay[positionOfNextIconIndex];\n    const copyOfIconIndexes = iconIndexesToDisplay;\n    copyOfIconIndexes.splice(positionOfNextIconIndex, 1);\n    this.setState({\n      currentIcon: svgs[nextIconIndex],\n      iconIndexesToDisplay: copyOfIconIndexes,\n      message: copyOfIconIndexes.length === 0 ? \"That's the end!\" : \"\",\n    })\n  };\n\n  render() {\n    const {\n      currentIcon,\n      message,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <div onClick={this.getIcon} className=\"icon-wrapper\">\n            <img src={currentIcon? currentIcon : book} className=\"icon\" alt={currentIcon} />\n            <div>{message}</div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}